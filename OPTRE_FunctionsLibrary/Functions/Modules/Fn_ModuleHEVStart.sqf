/*
OPTRE_fnc_ModuleHUD

Author: Big_Wilk

Description: 

Command: Module Spawned 
Return: bool   
Syntax: 
Parameters: 

Demo Mission:
Media:

Example1:

Result: 

Example2:

Result: 

MP: Server 
*/

// Argument 0 is module logic.
_logic = [_this,0,objNull,[objNull]] call BIS_fnc_param; // Argument 0 is module logic.
_units = [_this,1,[],[[]]] call BIS_fnc_param; // Argument 1 is list of affected units (affected by value selected in the 'class Units' argument))
_activated = [_this,2,true,[true]] call BIS_fnc_param; // True when the module was activated, false when it's deactivated (i.e., synced triggers are no longer active)

_Start = _logic getVariable "Start"; 
_Atmosphere = _logic getVariable "Atmosphere"; 
_ReEntryEnd = _logic getVariable "ReEntryEnd"; 
_ChuteHeight = if (_logic getVariable "Chute" < 800) then {800} else {_logic getVariable "Chute"}; 

_HEV_Control = _logic getVariable "HEV_Control"; 

_HEV_Respawn = _logic getVariable "HEV_Respawn"; 
_RespawnRadomised = _logic getVariable "RespawnRadomised"; 

_tilt = 45; 
_launchVelocity = ([[0,0,0],(_logic getVariable "LaunchDir"),(_logic getVariable "LaunchDirSpeed"),(_logic getVariable "LaunchSpeedDownORUp")] call OPTRE_fnc_GetVelocityWithAddedSpeedDirAndDown);//[0,-3500,-15500]; 
_frigateLaunchClass = "OPTRE_Frigate_Final_Dawn";
_frigateAngle = -90;
_faceDir = (_logic getVariable "LaunchDir") - 180;

_playersArray = [];
_aiArray = [];
_HEVarray = [];
_fireArray =  [];
_lightArray = [];

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////// Sort Players From AI //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

{
	if (isPlayer _x) then {
		_playersArray pushBack _x;
	} else {
		_aiArray pushBack _x;
	};
} forEach _units;
_combinedArray = _aiArray + _playersArray;

//{ [[_Start,_Atmosphere,_ReEntryEnd,_Chute,_HEV_Control,,,,],"OPTRE_fnc_HEVPlayer",_x,false] call BIS_fnc_MP; } forEach _playersArray; 
0 = [_logic] execVM "HEVPlayerEffects.sqf";  

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////// Get Everyone A Pod ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

{

	_StartPos = getPos _x; 
	_HEV = createVehicle ["OPTRE_HEV",[_StartPos select 0, _StartPos select 1, _Start], [], 0, "FLY"]; 
	0 = [_HEV, _tilt, 0] call BIS_fnc_setPitchBank;
	_HEV setVelocity _launchVelocity; //[0,-15000,-10000];
	_HEVarray pushBack _HEV;
	_HEV setDir _faceDir; 
	
	if (local _x) then {
		_x assignAsDriver _HEV; 
		_x moveInDriver _HEV;
	} else {
		[[_HEV,_x],"OPTRE_fnc_AssignAsDriverRemotely",_x,false,true] call BIS_fnc_MP; 
	};
	
	//_x allowDamage false; 	
	//_HEV allowDamage false; 
	
	
} forEach _combinedArray;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////// Correct Initial Tilt From Launch //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

while {_tilt < -1 OR _tilt > 1} do {
	if (_tilt > 1) then {_tilt = _tilt - 0.1;} else {_tilt = _tilt + 0.1;};
	sleep 0.01;
	{0 = [_x, _tilt, 0] call BIS_fnc_setPitchBank;} forEach _HEVarray;
};

{0 = [_x, 0, 0] call BIS_fnc_setPitchBank;} forEach _HEVarray;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////// Start Atmospheric Effects //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

waitUntil { { ((getPos _x) select 2) < _Atmosphere } count _HEVarray > 0 };


{

	_source01 = "#particlesource" createVehicleLocal [0,0,0];
	_source01 setParticleClass "ObjectDestructionFire1Smallx";
	_source01 attachto [_x,[0,0,-3]];

	_source02 = "#particlesource" createVehicleLocal [0,0,0];     
	_source02 setParticleClass "AirObjectDestructionFire";
	_source02 attachto [_x,[0,1.5,-3]];  
	
	_source03 = "#particlesource" createVehicleLocal [0,0,0];     
	_source03 setParticleClass "AirObjectDestructionFire";
	_source03 attachto [_x,[0,-1.5,-3]];  

	_source04 = "#particlesource" createVehicle  [0,0,0];
	_source04 attachTo [_x,[0,0,-20]];
	_source04 setParticleCircle [0, [0, 0, 0]];
	_source04 setParticleRandom [0, [0.25, 0.25, 0], [0.175, 0.175, 0], 0, 0.25, [0, 0, 0, 0.1], 0, 0];
	_source04 setParticleParams [["\A3\data_f\cl_exp", 1, 0, 1], "", "Billboard", 1, 0.5, [0, 0, 0], [0, 0, -1], 0, 20, 2, 0.075, [5.5, 2, 4], [[0.1, 0.1, 0.1, 1], [0.25, 0.25, 0.25, 0.5], [0.5, 0.5, 0.5, 0]], [0.08], 1, 0, "", "", _x];
	_source04 setDropInterval 0.01;
	
	_light = "#lightpoint" createVehicle [0,0,10000];
	_light lightAttachObject [_x, [0,0.75,0]];
	_light setLightBrightness 50;
	_light setLightAmbient[1,0,0];
	_light setLightColor[1,0,0];
	_light setLightDaylight true;
	_light setLightUseFlare false;
	_light setLightIntensity 50;
	
	_fireArray pushBack _source04;	
	_fireArray pushBack _source03;	
	_fireArray pushBack _source02;	
	_fireArray pushBack _source01;	
	_lightArray pushBack _light;
	
	sleep (random .1);
	
} forEach _HEVarray;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////// End Atmospheric Effects ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

waitUntil { { ((getPos _x) select 2) < _ReEntryEnd } count _HEVarray > 0 };
{deleteVehicle _x;} forEach _fireArray + _lightArray;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////// Chute Opens Now ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

waitUntil { { ((getPos _x) select 2) < _ChuteHeight } count _HEVarray > 0 };

_HEVChuteArray = [];

{

	_chute = createVehicle ["OPTRE_HEV_Chute", [0,0,0], [], 0, ""];
	_chute attachto [_x,[0,0,0.6],"chute_attach"];
	
	if (isPlayer (driver _x)) then {["OPTRE_Sounds_HEV_Chute","playsound",(driver _x),false] call BIS_fnc_MP;};
	
	_x setVelocity [0,0,0];
	
	_HEVChuteArray pushBack _chute;
	
	sleep (random .5);
	
	
	
} forEach _HEVarray;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////// Chute Opens Now ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

waitUntil { { ((getPos _x) select 2) < (_ChuteHeight / 2) } count _HEVarray > 0 };

//_vel = [windDir,100,-200] call OPTRE_fnc_GetVelocityWithAddedSpeedDirAndDown;
{detach _x; /*_x setVelocity _vel;*/} forEach _HEVChuteArray;

{
	_x spawn {
	
		_pos = getpos _this; 
		_driver = driver _this; 
		
		playSound3d ["A3\data_f_curator\sound\cfgsounds\incoming1.wss",_this,false,[(_pos select 0),(_pos select 1),0], 20,1,250];
		
		waitUntil { ((getPos _this) select 2) < 1 OR !(_driver in _this) OR !alive _driver};
		playSound3d ["A3\Sounds_F\sfx\vehicle_collision.wss",_this,false, (getPos _this), 20,1,250];
		
		_this setVelocity [0,0,-1];
		
		sleep 1;
		
		if ((random 1) < .25) then {
		
			{_this setObjectTextureGlobal [_x,""];} forEach [0,1,2,3];

			_door = createVehicle ["OPTRE_HEV_Door", [0,0,0], [], 0, ""];
			_door attachto [_this,[0,3,0.5]];
			detach _door;
			_dir = getdir _this;
			_door setdir (_dir - 180);
			
			[_this, "OPTRE_Sounds_HEV_Pop",200] call CBA_fnc_globalSay3d;
			_door setVelocity ([ [0,0,0], _dir, 10, 2 ] call OPTRE_fnc_GetVelocityWithAddedSpeedDirAndDown);
		
		} else {
			
			{_this animate [_x ,1];} forEach ["main_door_rotation","left_door_rotation","right_door_rotation"]; 
			
		};
		
		sleep .5;
		_driver leaveVehicle _this;
		
	};
	
} forEach _HEVarray;

waitUntil { { ((getPos _x) select 2) < 200 } count _HEVarray > 0 };

// boaster up effects