class CfgSkeletons 
{ 
	class Default
	{
		isDiscrete = 0;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Pelican_base_skeleton: Default	
	{
		skeletonInherit = "";		
		skeletonBones[] = { 							
			
			"gear1","",
			"gear2","",
			"gear3","",
			"turret","",
			"turTest","",
			"engine_1", "",
			"engine_2", "",
			"engine_3", "",
			"engine_4", "",
			"door_1","",
			"door_2","",
			"mainturret","",
            "maingun","mainturret",
			"zasleh","maingun"
			};
	};
};
class CfgModels 
{	
	class Default
	{
		sections[] = {};
		sectionsInherit="";
		skeletonName = "";
	};
	class pelican_base: Default
	{
		sectionsInherit="";
		sections[] =
		{
		"Camo1",	
		"camo3",		
		"mainturret",
		"maingun",
		"clan",
		"clan_text",
		"insignia",
		"attach_gun",
		"zasleh"
		};

		skeletonName="Pelican_base_skeleton";
		class Animations
		{

			//Raising Landing Gear 

				class frontGear
			{
				type = "rotation";
				selection = "gear1";
				axis = "front_gear_axis";
				source = "gear";
				memory = 1;
				minValue=0.000000;
				maxValue=0.500000;
				angle0=0.000000;
				angle1=-1.1;
				initPhase = 0.0;
			};
			class rearRightGear 
			{
				type = "rotation";
				selection = "gear2";
				axis = "rearRightGear_axis";
				source = "gear";
				memory = 1;
				sourceAddress="clamp";
				minValue=0.000000;
				maxValue=0.500000;
				angle0=0.000000;
				angle1=1.1;
				initPhase = 0.0;
			};

			class rearLeftGear 
			{
				type = "rotation";
				selection = "gear3";
				axis = "rearLeftGear_axis";
				source = "gear";
				memory = 1;
				sourceAddress="clamp";
				minValue=0.000000;
				maxValue=0.500000;
				angle0=0.000000;
				angle1=1.1;
				initPhase = 0.0;
			};
			//Raising Gear end

			//tuck landing gear
			class rearRightGearTuck
			{
				type = "rotationZ";
				selection = "gear2";
				axis = "rearRightGear_retrac";
				source = "gear";
				memory = 1;
				sourceAddress="clamp";
				minValue=0.000000;
				maxValue=1;
				angle0=0.000000;
				angle1=-0.45;
				initPhase = 0.0;
			};

			class rearLeftGearTuck
			{
				type = "rotationZ";
				selection = "gear3";
				axis = "rearLeftGear_retrac";
				source = "gear";
				memory = 1;
				sourceAddress="clamp";
				minValue=0.000000;
				maxValue=1;
				angle0=0.000000;
				angle1=0.45;
				initPhase = 0.0;
			};

			//tuck landing gear end
			//gun movement
			class mainturret //the horizontal moving part of the turret
                	{
                		type="rotationY";
                		source="mainturret";
                		selection="mainturret";
                		axis="OsaVeze";
              		 	animPeriod=0;
                		memory=1;
                		minValue="rad -360";
                		maxValue="rad +360";
                		angle0="rad -360";
                		angle1="rad +360";
                	};
           	class maingun //the vertical moving part of the turret
                	{
                		type="rotationX";
                		source="maingun";
                		selection="maingun";
                		axis="Osa Hlavne";
                		animPeriod=0;
                		memory=1;
                		minValue="rad -360";
               			maxValue="rad +360";
                		angle0="rad -360";
                		angle1="rad +360";
                	};
			class muzzleflash_hide
			{
				type="hide";
				source="hasSuppressor";
				selection="zasleh";
				minValue = 0.0;
				maxvalue = 0.25;
				hideValue = 0.01;
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
			//gun movementend
			
		//Front back wing rotation
			//may need to see what actual sources is needed to get these to change with VTOL
			class front_wing_1
			{

				type = "rotation";
				selection = "engine_1";
				axis = "fwing_axis";
				source= "horizonBank";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=-0.45;
				angle1=0.45;
				initPhase = 0.0;
			};

			class front_wing_2
			{

				type = "rotation";
				selection = "engine_4";
				axis = "fwing_axis";
				source= "horizonBank";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=0.45;
				angle1=-0.45;
				initPhase = 0.0;
			};

		class back_wing_1
			{

				type = "rotation";
				selection = "engine_2";
				axis = "Bwing_axis";
				source= "horizonBank";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=-0.45;
				angle1=0.45;
				initPhase = 0.0;
			};

			class back_wing_2
			{

				type = "rotation";
				selection = "engine_3";
				axis = "bWing_axis";
				source= "horizonBank";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=0.45;
				angle1=-0.45;
				initPhase = 0.0;
			};
			class front_wing_1b
			{

				type = "rotation";
				selection = "engine_1";
				axis = "fwing_axis";
				source= "horizonDive";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=0.45;
				angle1=-0.45;
				initPhase = 0.0;
			};

			class front_wing_2b
			{

				type = "rotation";
				selection = "engine_4";
				axis = "fwing_axis";
				source= "horizonDive";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=0.45;
				angle1=-0.45;
				initPhase = 0.0;
			};

			class back_wing_1b
			{

				type = "rotation";
				selection = "engine_2";
				axis = "Bwing_axis";
				source= "horizonDive";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=0.45;
				angle1=-0.45;
				initPhase = 0.0;
			};

			class back_wing_2b
			{

				type = "rotation";
				selection = "engine_3";
				axis = "bWing_axis";
				source= "horizonDive";
				sourceAddress="clamp";
				minValue=-0.45;
				maxValue=0.45;
				angle0=0.45;
				angle1=-0.45;
				initPhase = 0.0;
			};


			//end wing rot

						//Cargo_Doors
			class cargoDoor_1
			{
				type = "rotation";
				source="cargoDoors";
				selection="door_1";
				axis="door_1_axis";
				memory = true;
				angle0=0;
				angle1=-1.6;
				minValue=0.0;
				maxValue=1.0;	

			};

				class cargoDoor_2
			{
				type = "rotation";
				source="cargoDoors";
				selection="door_2";
				axis="door_2_axis";
				memory = true;
				angle0=0;
				angle1=0.6;
				minValue=0.0;
				maxValue=1.0;				
			};
	
	};
   };
 };
