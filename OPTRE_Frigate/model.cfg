// Note: this model config is created with 4-space [tab] symbols. If you use different settings, the structure may not be as clear.
class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};

	// Skeleton of undamaged variant of the house, containing doors and windows. Note that glass #3 is not a window but the glass pane of glass door (door #1). Therefore
	// (similar to door handles) it's bones need to be appropriately linked to bones of the door so that it moves along with it when the door is opened/closed.
	class hangar_door_skeleton: Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"Door_1",				"",
			"Door_2",				""
		};
	};
	class frigate_hangar_lift_doors_skeleton: Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"Door_1",				"",
			"Door_2",				""
		};
	};
	class vehicle_lift_PH2_skeleton: Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"lift_plat",				""
		};
	};
	class vehicle_lift_PH_skeleton: Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"lift_plat",				""
		};
	};
	class lift_gate_skeleton: Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"part1",				"",
			"part2",				""
		};
	};
	class cargo_door_skeleton: Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"Door_1",				"",
			"Door_2",				""
		};
	};
	
	class turret_skeleton: Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"mainturret", "",
			"turret_axis", "",
			"gun_axis", "",
			"maingun", "mainturret",
			"OsaVeze", "",
			"OsaHlavne", "",
			"OtocVez", "",
			"OtocHlaven", "OtocVez"
		};
	};
};

class CfgModels
{
	class Default;
	class hangar_door: Default // class name must be the same as name of p3d
	{
		skeletonName = "hangar_door_skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
		};
		sectionsInherit = "";		
		class Animations
		{
			// Animation for door #1
			class Door_1_rot
			{
				type			= translation;
				source			= HangarDoor_1; // Controler defined in class AnimationSources in config.cpp.
				selection		= Door_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= motionaxis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				offset0=0; 
				offset1=-.41; 
			};

			// Animation for door #2
			class Door_2_rot: Door_1_rot
			{
				source			= HangarDoor_2;
				selection		= Door_2;
				axis			= motionaxis;
				minValue		= 0.1; // Rotation of door starts at 0.1 instead of 0, because from 0 to 0.1 the handle is pressed down.
				offset0=0; 
				offset1=.41; 
			};
		};
	};
	class sidedoors1: hangar_door // class name must be the same as name of p3d
	{};
	class sidedoors2: hangar_door // class name must be the same as name of p3d
	{};
	class sidedoors3: hangar_door // class name must be the same as name of p3d
	{};
	class sidedoors4: hangar_door // class name must be the same as name of p3d
	{};
	class frigate_hangar_lift_doors: Default // class name must be the same as name of p3d
	{
		skeletonName = "frigate_hangar_lift_doors_skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
		};
		sectionsInherit = "";		
		class Animations
		{
			// Animation for door #1
			class Door_1_rot
			{
				type			= translation;
				source			= LiftDoor_1; // Controler defined in class AnimationSources in config.cpp.
				selection		= Door_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= motionaxis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				offset0=0; 
				offset1=-.47; 
			};

			// Animation for door #2
			class Door_2_rot: Door_1_rot
			{
				source			= LiftDoor_2;
				selection		= Door_2;
				axis			= motionaxis;
				minValue		= 0.1; // Rotation of door starts at 0.1 instead of 0, because from 0 to 0.1 the handle is pressed down.
				offset0=0; 
				offset1=.48; 
			};
		};
	};
	class vehicle_lift_PH2: Default // class name must be the same as name of p3d
	{
		skeletonName = "vehicle_lift_PH2_skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
		};
		sectionsInherit = "";		
		class Animations
		{
			// Animation for door #1
			class Door_1_rot
			{
				type			= translation;
				source			= lift_1; // Controler defined in class AnimationSources in config.cpp.
				selection		= lift_plat; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= motionaxis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				offset0=0; 
				offset1=-3.62; 
			};
		};
	};
	class vehicle_lift_PH: Default // class name must be the same as name of p3d
	{
		skeletonName = "vehicle_lift_PH_skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
		};
		sectionsInherit = "";		
		class Animations
		{
			// Animation for door #1
			class Door_1_rot
			{
				type			= translation;
				source			= lift_1; // Controler defined in class AnimationSources in config.cpp.
				selection		= lift_plat; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= motionaxis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				offset0=0; 
				offset1=.6; 
			};
		};
	};
	class lift_gate: Default // class name must be the same as name of p3d
	{
		skeletonName = "lift_gate_skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
		};
		sectionsInherit = "";		
		class Animations
		{
			// Animation for door #1
			class part_1_rot
			{
				type			= translation;
				source			= liftgate_1; // Controler defined in class AnimationSources in config.cpp.
				selection		= part1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= motionaxis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				offset0=0; 
				offset1=-0.485; 
			};

			// Animation for door #2
			class part_2_rot: part_1_rot
			{
				source			= liftgate_2;
				selection		= part2;
				axis			= motionaxis;
				minValue		= 0.1; // Rotation of door starts at 0.1 instead of 0, because from 0 to 0.1 the handle is pressed down.
				offset0=0; 
				offset1=-.235; 
			};
		};
	};
	class cargo_door: Default // class name must be the same as name of p3d
	{
		skeletonName = "cargo_door_skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
		};
		sectionsInherit = "";		
		class Animations
		{
			// Animation for door #1
			class door_1_rot
			{
				type			= translation;
				source			= cargo_door_1; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= motionaxis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				offset0=0; 
				offset1=-0.64; 
			};

			// Animation for door #2
			class door_2_rot: door_1_rot
			{
				source			= cargo_door_2;
				selection		= door_2;
				axis			= motionaxis;
				minValue		= 0.1; // Rotation of door starts at 0.1 instead of 0, because from 0 to 0.1 the handle is pressed down.
				offset0=0; 
				offset1=.64; 
			};
		};
	};
	
	class turret: Default
	{
		skeletonName = "turret_skeleton";
		sectionsInherit = "";
		sections[]=
		{
			"turret_axis",
			"gun_axis",
			"mainturret",
			"maingun",
			"OsaVeze",
			"OsaHlavne",
			"OtocHlaven",
			"OtocVez",
			"z_gunL_chamber",
			"z_gunL_muzzle",
			"z_gunR_chamber",
			"z_gunR_muzzle",
			"Usti hlavne1R",
			"konec hlavne1R",
			"Usti hlavne2L",
			"konec hlavne2L"
		};
		class Animations
		{
			class turret_rot
			{
				type="rotationY";
				source="mainTurret";
				selection="OtocVez";
				axis="OsaVeze";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
				memory = 1;
			};	
			class gun_elev: turret_rot 
			{
				type="rotationX";
				source="mainGun";
				selection="OtocHlaven";
				axis="OsaHlavne";
			};		
		};
	};
};